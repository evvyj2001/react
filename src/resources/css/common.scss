@charset "UTF-8";
@import "base";
@import "mixin";
@import "layout";
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap');

@font-face {
    font-family: 'IM_Hyemin-Bold';
    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2106@1.1/IM_Hyemin-Bold.woff2') format('woff');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'Cafe24Ssurround';
    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/Cafe24Ssurround.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}


// 공통
button.default{
    height: 3.5rem;
    background: #fff;
    padding: 0 1rem;
    font-size: 1.4rem;
    line-height: 1.4rem;
    border-radius: 1rem;
    &:disabled{
        opacity: .5;
        pointer-events: none;
    }
}
input[type='checkbox']{
    & + label{
        font-size: 1.4rem;
    }
    &:before{
        content: '';
        display: inline-block;
        width: 2.4rem;
        height: 2.4rem;
        background: #fff;
        border: 3px solid #ccc;
        box-sizing: border-box;
    }
}
input[type='checkbox']:checked{
    &:before{
        border-color: #333;
        background: greenyellow;
    }
}
input[type='radio']{
    & + label{
        font-size: 1.4rem;
    }
    &:before{
        content: '';
        display: inline-block;
        width: 2.4rem;
        height: 2.4rem;
        background: #fff;
        border: 3px solid #ccc;
        box-sizing: border-box;
        border-radius: 100%;
    }
}
input[type='radio']:checked{
    &:before{
        border-color: #333;
        background: greenyellow;
    }
}
.scroll-wrap{
    width: 100%;
    overflow-x: auto;
    overflow-y: hidden;
    margin-bottom: 1rem;
    -ms-overflow-style: none;
}
.scroll-wrap::-webkit-scrollbar{ 
    display:none; 
}

.tab-list{
    width: max-content;
    >li{
        float: left;
        font-size: 1.4rem;
        >a{
            display: block;
            height: 3.4rem;
            padding: 0 1.5rem;
            line-height: 3.4rem;
            background: #fff;
            border: 1px solid #ccc;
            border-radius: 2rem;
        }
        &.on{
            >a{
                background: greenyellow;
                border-color: greenyellow;
                font-weight: 700;
            }

        }
        & + li{
            margin-left: 1rem;
        }
    }
    & +.tab-cont{
        margin-top: 1rem;
    }
}
.tab-cont{
    width: 100%;
    height: auto;
    >li{
        display: none;
        background: #fff;
        &.on{
            display: block;
        }
    }
}
input[type='checkbox'].toggle{
    position: relative;
    &:before{
        content: '';
        display: inline-block;
        width: 6rem;
        height: 3.5rem;
        background: #fff;
        border-radius: 2rem;
    }
    &:after{
        content: '';
        display: inline-block;
        width: 2.9rem;
        height: 2.9rem;
        position: absolute;
        left: .3rem;
        top: .3rem;
        background: #333;
        border-radius: 100%;
        transition: all .5s;
    }
}
input[type='checkbox'].toggle:checked{
    &:before{
        border-color: #ccc;
    }
    &:after{
        transform: translateX(calc(100% - .4rem));
        background: greenyellow;
    }
}

//선택자 예시
button[class^='btn-']{
    //'btn-'으로 시작하는 요소
    &[class~='bg']{
        //위치 상관없이 'bg'라는 단어가 공백으로 분리되어있으며 속해있는 요소 (더블 클래스 등)
    }
    &[class|='bg']{
        //'bg'라는 단어와 클래스명이 일치하거나 'bg-'하이픈으로 시작하는 요소
    }
    &[class*='lg'], &[class*='sm'], &[class*='nm']{
        //'lg/sm/nm'를 포함하는 요소 
    }
    &[class$='-lg'], &[class$='-sm'], &[class$='-nm']{
        //'lg/sm/nm'로 끝나는 요소 
    }
    & ~ button{
        //button[class^='btn-'] 뒤에 위치하는 모든 button 요소
    }
}




/* media query */
//320px 이하 해상도에서 기본 font-size 9px로
@media all and (max-width:320px){
    html{
        font-size: 8px;
    }
}
